---
apiVersion: flux.weave.works/v1beta1
kind: HelmRelease
metadata:
  name: prometheus-operator
  namespace: monitoring
  annotations:
    flux.weave.works/automated: "false"
spec:
  releaseName: prometheus-operator
  chart:
    repository: https://kubernetes-charts.storage.googleapis.com/
    name: prometheus-operator
    version: 5.0.1
  values:
    alertmanager:
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
        hosts:
        - alertmanager.stg.dexlab.tk
        tls:
        - secretName: stg-dexlab-tk-tls
          hosts:
          - alertmanager.stg.dexlab.tk
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: thin-disk
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 2Gi
    grafana:
      serviceMonitor:
        selfMonitor: true
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
        hosts:
        - grafana.stg.dexlab.tk
        tls:
        - secretName: stg-dexlab-tk-tls
          hosts:
          - grafana.stg.dexlab.tk
      persistence:
        enabled: true
        storageClassName: thin-disk
        accessModes:
        - ReadWriteOnce
        size: 2Gi
    kubeControllerManager:
      endpoints:
      - 10.10.10.21
    coreDns:
      enabled: false
    kubeDns:
      enabled: true
    kubeEtcd:
      endpoints:
      - 10.10.10.21
      serviceMonitor:
        scheme: https
        serverName: localhost
        caFile: "/etc/prometheus/secrets/etcd-client-cert/kube-ca.pem"
        certFile: "/etc/prometheus/secrets/etcd-client-cert/kube-node.pem"
        keyFile: "/etc/prometheus/secrets/etcd-client-cert/kube-node-key.pem"
    kubeScheduler:
      enabled: true
      endpoints:
      - 10.10.10.21
    prometheus:
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
        hosts:
        - prometheus.stg.dexlab.tk
        tls:
        - secretName: stg-dexlab-tk-tls
          hosts:
          - prometheus.stg.dexlab.tk
      prometheusSpec:
        scrapeInterval: "1m"
        evaluationInterval: "1m"
        secrets:
        - etcd-client-cert
        retention: 1d
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: thin-disk
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 4Gi
            selector: {}
        additionalScrapeConfigs:
        - job_name: 'metallb-system'
          kubernetes_sd_configs:
          - role: pod
          relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: keep
            regex: (.*metallb.*)
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
        - job_name: 'unknown'
          kubernetes_sd_configs:
          - role: pod
          relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: drop
            regex: (.*metallb.*)
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name
